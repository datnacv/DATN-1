package com.example.AsmGD1.service.GiamGia;

import com.example.AsmGD1.entity.PhieuGiamGia;
import com.example.AsmGD1.repository.GiamGia.PhieuGiamGiaRepository;
import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

@Service
@RequiredArgsConstructor
public class PhieuGiamGiaService {

    private static final Logger logger = LoggerFactory.getLogger(PhieuGiamGiaService.class);

    private final PhieuGiamGiaRepository phieuGiamGiaRepository;

    public List<PhieuGiamGia> layTatCa() {
        return phieuGiamGiaRepository.findAll();
    }

    public PhieuGiamGia luu(PhieuGiamGia phieu) {
        if (phieu.getThoiGianTao() == null) {
            phieu.setThoiGianTao(LocalDateTime.now());
        }

        if ("ca_nhan".equalsIgnoreCase(phieu.getKieuPhieu())) {
            phieu.setSoLuong(1);
            phieu.setGioiHanSuDung(1);
        } else {
            if (phieu.getSoLuong() == null) {
                phieu.setSoLuong(1);
            }
            if (phieu.getGioiHanSuDung() == null) {
                phieu.setGioiHanSuDung(phieu.getSoLuong());
            }
        }

        return phieuGiamGiaRepository.save(phieu);
    }

    public String tinhTrang(PhieuGiamGia v) {
        LocalDateTime now = LocalDateTime.now();
        LocalDateTime batDau = v.getNgayBatDau();
        LocalDateTime ketThuc = v.getNgayKetThuc();

        if (batDau != null && ketThuc != null) {
            if (now.isBefore(batDau)) return "S·∫Øp di·ªÖn ra";
            else if (!now.isAfter(ketThuc)) return "ƒêang di·ªÖn ra";
            else return "ƒê√£ k·∫øt th√∫c";
        }

        return "Kh√¥ng x√°c ƒë·ªãnh";
    }

    @Transactional
    public boolean apDungPhieuGiamGia(UUID phieuId) {
        PhieuGiamGia phieu = phieuGiamGiaRepository.findById(phieuId).orElse(null);
        if (phieu == null) {
            logger.warn("Kh√¥ng t√¨m th·∫•y phi·∫øu gi·∫£m gi√°: phieuId={}", phieuId);
            return false;
        }
        if (!"ƒêang di·ªÖn ra".equals(tinhTrang(phieu))) {
            logger.warn("Phi·∫øu gi·∫£m gi√° kh√¥ng trong th·ªùi gian hi·ªáu l·ª±c: phieuId={}", phieuId);
            return false;
        }

        Integer soLuong = phieu.getSoLuong();
        if (soLuong != null && soLuong > 0) {
            phieu.setSoLuong(soLuong - 1);
            phieuGiamGiaRepository.save(phieu);
            phieuGiamGiaRepository.flush();
            logger.info("√Åp d·ª•ng phi·∫øu c√¥ng khai th√†nh c√¥ng: phieuId={}, soLuong moi={}", phieuId, phieu.getSoLuong());
            return true;
        }

        logger.warn("Phi·∫øu c√¥ng khai kh√¥ng kh·∫£ d·ª•ng: soLuong={}", soLuong);
        return false;
    }

    /** Gi·∫£m tr√™n t·ªïng ƒë∆°n (ORDER): ƒë√£ c√≥ s·∫µn */
    public BigDecimal tinhTienGiamGia(PhieuGiamGia phieu, BigDecimal tongTien) {
        if (phieu == null || tongTien == null || tongTien.compareTo(BigDecimal.ZERO) <= 0) {
            logger.warn("‚ö†Ô∏è ƒê·∫ßu v√†o kh√¥ng h·ª£p l·ªá - phieu: {}, tongTien: {}", phieu, tongTien);
            return BigDecimal.ZERO;
        }

        BigDecimal giamGia = BigDecimal.ZERO;
        BigDecimal giaTriGiam = phieu.getGiaTriGiam();

        if (giaTriGiam == null || giaTriGiam.compareTo(BigDecimal.ZERO) <= 0) {
            logger.warn("‚ö†Ô∏è Gi√° tr·ªã gi·∫£m kh√¥ng h·ª£p l·ªá - giaTriGiam: {}", giaTriGiam);
            return BigDecimal.ZERO;
        }

        String loai = phieu.getLoai();
        if (loai == null || loai.isBlank()) {
            logger.warn("‚ö†Ô∏è Lo·∫°i phi·∫øu null ho·∫∑c r·ªóng - ma: {}", phieu.getMa());
            return BigDecimal.ZERO;
        }

        String loaiChuanHoa = loai.trim().toUpperCase().replace("_", "").replace(" ", "");
        logger.info("üîé T√≠nh ti·ªÅn gi·∫£m gi√° | M√£: {}, Lo·∫°i g·ªëc: {}, Lo·∫°i chu·∫©n h√≥a: {}, Gi√° tr·ªã gi·∫£m: {}, T·ªïng ti·ªÅn: {}",
                phieu.getMa(), loai, loaiChuanHoa, giaTriGiam, tongTien);

        if ("PERCENT".equals(loaiChuanHoa) || "PHANTRAM".equals(loaiChuanHoa)) {
            giamGia = tongTien.multiply(giaTriGiam)
                    .divide(BigDecimal.valueOf(100), RoundingMode.HALF_UP)
                    .setScale(0, RoundingMode.HALF_UP);

            if (phieu.getGiaTriGiamToiDa() != null &&
                    giamGia.compareTo(phieu.getGiaTriGiamToiDa()) > 0) {
                logger.info("üîÅ √Åp d·ª•ng gi·ªõi h·∫°n t·ªëi ƒëa: {} thay v√¨ {}", phieu.getGiaTriGiamToiDa(), giamGia);
                giamGia = phieu.getGiaTriGiamToiDa();
            }
        } else if ("FIXED".equals(loaiChuanHoa) || "TIENMAT".equals(loaiChuanHoa) || "CASH".equals(loaiChuanHoa)) {
            giamGia = giaTriGiam;
            logger.info("üîÅ √Åp d·ª•ng gi·∫£m gi√° ti·ªÅn m·∫∑t: {}", giamGia);
        } else {
            logger.warn("‚ö†Ô∏è Lo·∫°i phi·∫øu kh√¥ng h·ªó tr·ª£: {}", loaiChuanHoa);
            return BigDecimal.ZERO;
        }

        if (giamGia.compareTo(tongTien) > 0) {
            logger.info("üîÅ Gi·∫£m gi√° v∆∞·ª£t t·ªïng ti·ªÅn, gi·ªõi h·∫°n l·∫°i b·∫±ng t·ªïng ti·ªÅn: {}", tongTien);
            giamGia = tongTien;
        }

        logger.info("‚úÖ S·ªë ti·ªÅn ƒë∆∞·ª£c gi·∫£m: {}", giamGia);
        return giamGia;
    }

    /** Gi·∫£m ph√≠ v·∫≠n chuy·ªÉn (SHIPPING): th√™m m·ªõi cho freeship */
    public BigDecimal tinhGiamPhiShip(PhieuGiamGia phieu, BigDecimal phiShip, BigDecimal tongTruocShip) {
        if (phieu == null || phiShip == null || phiShip.compareTo(BigDecimal.ZERO) <= 0) return BigDecimal.ZERO;
        if (!"SHIPPING".equalsIgnoreCase(phieu.getPhamViApDung())) return BigDecimal.ZERO;

        // ƒê∆°n t·ªëi thi·ªÉu (n·∫øu c√≥) so v·ªõi subtotal
        if (phieu.getGiaTriGiamToiThieu() != null &&
                tongTruocShip != null &&
                tongTruocShip.compareTo(phieu.getGiaTriGiamToiThieu()) < 0) {
            logger.info("üö´ Kh√¥ng ƒë·∫°t ƒë∆°n t·ªëi thi·ªÉu freeship | y√™u c·∫ßu: {}, th·ª±c t·∫ø: {}",
                    phieu.getGiaTriGiamToiThieu(), tongTruocShip);
            return BigDecimal.ZERO;
        }

        String loai = phieu.getLoai() == null ? "" : phieu.getLoai().trim().toUpperCase();
        switch (loai) {
            case "FREESHIP_FULL":
                return phiShip; // mi·ªÖn to√†n b·ªô
            case "FREESHIP_CAP":
                if (phieu.getGiaTriGiamToiDa() == null || phieu.getGiaTriGiamToiDa().compareTo(BigDecimal.ZERO) <= 0) {
                    logger.warn("‚ö†Ô∏è FREESHIP_CAP thi·∫øu/kh√¥ng h·ª£p l·ªá giaTriGiamToiDa");
                    return BigDecimal.ZERO;
                }
                return phiShip.min(phieu.getGiaTriGiamToiDa()); // mi·ªÖn t·ªëi ƒëa X‚Ç´
            default:
                logger.warn("‚ö†Ô∏è Lo·∫°i freeship kh√¥ng h·ªó tr·ª£: {}", loai);
                return BigDecimal.ZERO;
        }
    }
}
